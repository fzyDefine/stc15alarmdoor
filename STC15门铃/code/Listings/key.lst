C51 COMPILER V9.59.0.0   KEY                                                               04/12/2023 10:33:53 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: D:\keil\keil_mdk\C51\BIN\C51.EXE key.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\k
                    -ey.lst) OBJECT(.\Objects\key.obj)

line level    source

   1          #include "key.h"
   2          u8 _4Keys_Scan();
   3          u8 _16Keys_Scan();
   4          
   5          u8 key_value = 0;
   6          
   7          void Timer_Long_Press(u8 key_total, u8 *get_value)
   8          {
   9   1          if (key_total == 4)
  10   1          {
  11   2              *get_value = _4Keys_Scan();
  12   2          }
  13   1          else
  14   1          {
  15   2              *get_value = _16Keys_Scan();
  16   2          }
  17   1      }
  18          
  19          // mode == 0为 短按模式, 1为长按模式
  20          void Timer_Keys_Scan(u8 key_total) //记录最近一次按下的按键值
  21          {
  22   1          static u8 now_state = 0, last_state = 0;
  23   1      
  24   1          last_state = now_state;
  25   1      
  26   1          if (key_total == 4)
  27   1              now_state = _4Keys_Scan();
  28   1          else
  29   1              now_state = _16Keys_Scan();
  30   1      
  31   1          //确保上一个10ms检测到了按键按下,并且这次检测松手了记为一次有效按键操作
  32   1          if (last_state != 0 && now_state == 0)
  33   1          {
  34   2              key_value = last_state; //并将按键值存储于key_value
  35   2          }
  36   1      }
  37          
  38          u8 read_key_value() //在短按模式下,当外部访问此函数时候,返回储存的按键值给调用者,且按键值key_value复位为0
  39          {
  40   1          u8 temp = 0;
  41   1          temp = key_value;
  42   1          key_value = 0;
  43   1          return temp;
  44   1      }
  45          
  46          u8 _4Keys_Scan()
  47          {
  48   1          u8 key_num = 0;
  49   1      
  50   1          if (KEY_S4_PIN == 0)
  51   1              key_num = S4_PRESS;
  52   1          else if (KEY_S5_PIN == 0)
  53   1              key_num = S5_PRESS;
  54   1          else if (KEY_S6_PIN == 0)
C51 COMPILER V9.59.0.0   KEY                                                               04/12/2023 10:33:53 PAGE 2   

  55   1              key_num = S6_PRESS;
  56   1          else if (KEY_S7_PIN == 0)
  57   1              key_num = S7_PRESS;
  58   1          else if (KEY_S8_PIN == 0)
  59   1              key_num = S8_PRESS;
  60   1          else if (KEY_S9_PIN == 0)
  61   1              key_num = S9_PRESS;
  62   1          else if (KEY_S10_PIN == 0)
  63   1              key_num = S10_PRESS;
  64   1      
  65   1          return key_num;
  66   1      }
  67          
  68          u8 _16Keys_Scan()
  69          {
  70   1          u8 key_num = 0;
  71   1          KEY_16_REG = 0x0f;
  72   1          P42 = 0;
  73   1          P44 = 0;
  74   1          if (KEY_16_REG != 0x0f)
  75   1          {
  76   2              KEY_16_REG = 0x0f;
  77   2              switch (KEY_16_REG)
  78   2              {
  79   3              case 0x07:
  80   3                  key_num = 4;
  81   3                  break;
  82   3              case 0x0b:
  83   3                  key_num = 5;
  84   3                  break;
  85   3              case 0x0d:
  86   3                  key_num = 6;
  87   3                  break;
  88   3              case 0x0e:
  89   3                  key_num = 7;
  90   3                  break;
  91   3              }
  92   2              KEY_16_REG = 0xf0;
  93   2              P42 = 1;
  94   2              P44 = 1;
  95   2              if (!P44)
  96   2                  key_num = key_num;
  97   2              if (!P42)
  98   2                  key_num = key_num + 4;
  99   2              if (!P35)
 100   2                  key_num = key_num + 8;
 101   2              if (!P34)
 102   2                  key_num = key_num + 12;
 103   2          }
 104   1      
 105   1          return key_num;
 106   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    214    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.59.0.0   KEY                                                               04/12/2023 10:33:53 PAGE 3   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
